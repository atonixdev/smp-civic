# Generated by Django 4.2.7 on 2025-09-22 08:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Full Control')], max_length=10)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SecureVault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vault_id', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('vault_key_encrypted', models.TextField(help_text='Encrypted vault master key')),
                ('encryption_algorithm', models.CharField(default='aes-256-gcm', max_length=50)),
                ('is_shared', models.BooleanField(default=False)),
                ('auto_backup', models.BooleanField(default=True)),
                ('retention_days', models.PositiveIntegerField(default=365, help_text='Data retention in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaultAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(choices=[('viewer', 'View Only'), ('contributor', 'View/Upload'), ('editor', 'View/Upload/Delete'), ('admin', 'Full Control')], max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vault_access_granted', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vault', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encryption.securevault')),
            ],
        ),
        migrations.AddField(
            model_name='securevault',
            name='collaborators',
            field=models.ManyToManyField(related_name='accessible_vaults', through='encryption.VaultAccess', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='securevault',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaults', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SecureMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=64, unique=True)),
                ('encrypted_content', models.TextField(help_text='E2EE encrypted message')),
                ('sender_public_key_fingerprint', models.CharField(max_length=64)),
                ('recipient_public_key_fingerprint', models.CharField(max_length=64)),
                ('encrypted_subject', models.TextField(blank=True)),
                ('encrypted_metadata', models.JSONField(default=dict)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_ephemeral', models.BooleanField(default=False, help_text='Auto-delete after reading')),
                ('delete_after_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EncryptionKeyPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_type', models.CharField(choices=[('rsa', 'RSA Asymmetric'), ('e2ee', 'End-to-End Encryption'), ('post_quantum', 'Post-Quantum')], max_length=20)),
                ('public_key', models.TextField(help_text='Base64 encoded public key')),
                ('private_key_encrypted', models.TextField(help_text='Encrypted private key (user password protected)')),
                ('key_fingerprint', models.CharField(help_text='SHA256 fingerprint of public key', max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Key expiration date', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_keys', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EncryptedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.CharField(help_text='Unique content identifier', max_length=64, unique=True)),
                ('content_type', models.CharField(choices=[('document', 'Document'), ('message', 'Message'), ('file', 'File'), ('metadata', 'Metadata')], max_length=20)),
                ('algorithm', models.CharField(choices=[('aes-256-gcm', 'AES-256-GCM'), ('rsa-4096-oaep+aes', 'RSA-4096-OAEP+AES-256'), ('curve25519+aes', 'Curve25519+AES-256'), ('kyber1024+aes', 'Kyber1024+AES-256')], max_length=50)),
                ('encrypted_data', models.TextField(help_text='Base64 encoded encrypted content')),
                ('encryption_metadata', models.JSONField(default=dict, help_text='Nonces, tags, etc.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('content_hash', models.CharField(help_text='SHA512 hash of original content', max_length=128)),
                ('file_size', models.PositiveIntegerField(help_text='Size in bytes')),
                ('authorized_users', models.ManyToManyField(related_name='accessible_content', through='encryption.ContentAccess', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encrypted_content', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='contentaccess',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encryption.encryptedcontent'),
        ),
        migrations.AddField(
            model_name='contentaccess',
            name='granted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_access', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contentaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_id', models.CharField(max_length=64, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('key_generated', 'Key Generated'), ('key_revoked', 'Key Revoked'), ('content_encrypted', 'Content Encrypted'), ('content_decrypted', 'Content Decrypted'), ('content_shared', 'Content Shared'), ('message_sent', 'Message Sent'), ('message_read', 'Message Read'), ('access_granted', 'Access Granted'), ('access_revoked', 'Access Revoked')], max_length=30)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_id', models.CharField(max_length=64)),
                ('metadata', models.JSONField(default=dict)),
                ('content_hash', models.CharField(help_text='SHA512 hash of log entry', max_length=128)),
                ('signature', models.CharField(help_text='Cryptographic signature', max_length=128)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='vaultaccess',
            index=models.Index(fields=['user', 'is_active'], name='encryption__user_id_6fd37a_idx'),
        ),
        migrations.AddIndex(
            model_name='vaultaccess',
            index=models.Index(fields=['vault', 'access_level'], name='encryption__vault_i_931779_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vaultaccess',
            unique_together={('vault', 'user')},
        ),
        migrations.AddIndex(
            model_name='securevault',
            index=models.Index(fields=['owner', 'created_at'], name='encryption__owner_i_4f137e_idx'),
        ),
        migrations.AddIndex(
            model_name='securevault',
            index=models.Index(fields=['vault_id'], name='encryption__vault_i_d92e70_idx'),
        ),
        migrations.AddIndex(
            model_name='securemessage',
            index=models.Index(fields=['sender', 'sent_at'], name='encryption__sender__075d0d_idx'),
        ),
        migrations.AddIndex(
            model_name='securemessage',
            index=models.Index(fields=['recipient', 'sent_at'], name='encryption__recipie_c5d1eb_idx'),
        ),
        migrations.AddIndex(
            model_name='securemessage',
            index=models.Index(fields=['message_id'], name='encryption__message_aac6d2_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptionkeypair',
            index=models.Index(fields=['user', 'key_type'], name='encryption__user_id_6ac186_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptionkeypair',
            index=models.Index(fields=['key_fingerprint'], name='encryption__key_fin_a22117_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='encryptionkeypair',
            unique_together={('user', 'key_type', 'is_active')},
        ),
        migrations.AddIndex(
            model_name='encryptedcontent',
            index=models.Index(fields=['owner', 'content_type'], name='encryption__owner_i_3ed00e_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedcontent',
            index=models.Index(fields=['content_id'], name='encryption__content_57cf07_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedcontent',
            index=models.Index(fields=['created_at'], name='encryption__created_cb4b4b_idx'),
        ),
        migrations.AddIndex(
            model_name='contentaccess',
            index=models.Index(fields=['user', 'is_active'], name='encryption__user_id_6f9471_idx'),
        ),
        migrations.AddIndex(
            model_name='contentaccess',
            index=models.Index(fields=['content', 'access_level'], name='encryption__content_392c41_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contentaccess',
            unique_together={('content', 'user')},
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='encryption__user_id_fb9a2d_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', 'timestamp'], name='encryption__action_5e0d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['resource_type', 'resource_id'], name='encryption__resourc_b416b5_idx'),
        ),
    ]
